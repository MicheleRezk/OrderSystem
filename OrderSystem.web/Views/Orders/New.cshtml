@model OrderSystem.Domain.Order

@{
    ViewBag.Title = "New Order";
}

<h2>New Waffle Order</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            <label class="control-label col-md-2" for="OrdinaryCount">Ordinary Count</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdinaryCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdinaryCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="SugarFreeCount">Sugar Free Count</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SugarFreeCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SugarFreeCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="SuperCount">Super Count</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SuperCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SuperCount, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
